import{_ as e,c as a,a2 as s,o as r}from"./chunks/framework.CW1_h_Kn.js";const k=JSON.parse('{"title":"Class: Task<P>","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/main/classes/Task.md","filePath":"reference/api/main/classes/Task.md"}'),i={name:"reference/api/main/classes/Task.md"};function d(o,t,h,n,l,p){return r(),a("div",null,t[0]||(t[0]=[s(`<p><a href="./../../modules.html">workloads</a> / <a href="./../">main</a> / Task</p><h1 id="class-task-p" tabindex="-1">Class: Task&lt;P&gt; <a class="header-anchor" href="#class-task-p" aria-label="Permalink to &quot;Class: Task\\&lt;P\\&gt;&quot;">​</a></h1><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./Workload.html"><code>Workload</code></a></li></ul><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><p><code>P</code></p></td></tr></tbody></table><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="new-task" tabindex="-1">new Task() <a class="header-anchor" href="#new-task" aria-label="Permalink to &quot;new Task()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   name, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   work, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Task</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><p><code>name</code></p></td><td><p><code>string</code></p></td><td><p>Name of the task.</p></td></tr><tr><td><p><code>work</code></p></td><td><p>(<code>task</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></td><td><p>Function that processes a task.</p></td></tr><tr><td><p><code>options</code>?</p></td><td><p><a href="./../interfaces/TaskOptions.html"><code>TaskOptions</code></a>&lt;<code>P</code>&gt;</p></td><td><p>‐</p></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Task.html"><code>Task</code></a>&lt;<code>P</code>&gt;</p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./Workload.html"><code>Workload</code></a>.<a href="./Workload.html#constructors"><code>constructor</code></a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="performlater" tabindex="-1">performLater() <a class="header-anchor" href="#performlater" aria-label="Permalink to &quot;performLater()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">performLater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecutionId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExecutionId[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Performs the task later, dispatching the task to a queue.</p><p><strong>NOTES</strong></p><p>In development, the task will be performed immediately.</p><p>In test, the task will collected ans can be retrieved with the <code>performedTasks</code> test helper.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>data</code></p></td><td><p><code>P</code> | <code>P</code>[]</p></td></tr><tr><td><p><code>options</code>?</p></td><td><p><code>PerformOptions</code></p></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>ExecutionId</code> | <code>ExecutionId</code>[]&gt;</p><hr><h3 id="performnow" tabindex="-1">performNow() <a class="header-anchor" href="#performnow" aria-label="Permalink to &quot;performNow()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">performNow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span></span></code></pre></div><p>Performs the task immediately in the current processs.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>data</code></p></td><td><p><code>P</code> | <code>P</code>[]</p></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Modifier</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>readonly</code></td><td><code>string</code></td><td>Unique ID</td></tr><tr><td><code>name</code></td><td><code>public</code></td><td><code>string</code></td><td>Name of the task.</td></tr><tr><td><code>options?</code></td><td><code>public</code></td><td><a href="./../interfaces/TaskOptions.html"><code>TaskOptions</code></a>&lt;<code>P</code>&gt;</td><td>-</td></tr><tr><td><code>work</code></td><td><code>public</code></td><td>(<code>task</code>: <code>object</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td><td>Function that processes a task.</td></tr></tbody></table>`,36)]))}const m=e(i,[["render",d]]);export{k as __pageData,m as default};
