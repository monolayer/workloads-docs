import{_ as t,c as s,a2 as a,o as r}from"./chunks/framework.CW1_h_Kn.js";const c=JSON.parse('{"title":"Type Alias: RequestResult<Data, TError, ThrowOnError>","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/test-helpers/type-aliases/RequestResult.md","filePath":"reference/api/test-helpers/type-aliases/RequestResult.md"}'),i={name:"reference/api/test-helpers/type-aliases/RequestResult.md"};function l(p,e,h,o,n,d){return r(),s("div",null,e[0]||(e[0]=[a('<p><a href="./../../modules.html">workloads</a> / <a href="./../">test-helpers</a> / RequestResult</p><h1 id="type-alias-requestresult-data-terror-throwonerror" tabindex="-1">Type Alias: RequestResult&lt;Data, TError, ThrowOnError&gt; <a class="header-anchor" href="#type-alias-requestresult-data-terror-throwonerror" aria-label="Permalink to &quot;Type Alias: RequestResult\\&lt;Data, TError, ThrowOnError\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RequestResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ThrowOnError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;: ThrowOnError extends true ? Promise&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; : Promise&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span></code></pre></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table><thead><tr><th>Type Parameter</th><th>Default type</th></tr></thead><tbody><tr><td><p><code>Data</code></p></td><td><p><code>unknown</code></p></td></tr><tr><td><p><code>TError</code></p></td><td><p><code>unknown</code></p></td></tr><tr><td><p><code>ThrowOnError</code> <em>extends</em> <code>boolean</code></p></td><td><p><code>boolean</code></p></td></tr></tbody></table>',5)]))}const u=t(i,[["render",l]]);export{c as __pageData,u as default};
